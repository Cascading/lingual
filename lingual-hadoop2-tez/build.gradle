/*
 * Copyright (c) 2007-2015 Concurrent, Inc. All Rights Reserved.
 *
 * Project and contact information: http://www.cascading.org/
 *
 * This file is part of the Cascading project.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: "../etc/shadow.gradle"

configurations {
  hadoopArtifacts {
    extendsFrom runtime
  }
}

dependencies {

  compile project( ':lingual-core' )

  // include for testing from an ide
  // testRuntime project( ':lingual-client' )

  testCompile project( path: ':lingual-platform', configuration: 'testArtifacts' )

  compile group: 'cascading', name: 'cascading-hadoop2-tez', version: cascadingVersion
  provided( group: 'org.apache.hadoop', name: 'hadoop-common', version: hadoop2TezVersion )
  provided( group: 'org.apache.hadoop', name: 'hadoop-client', version: hadoop2TezVersion )

  provided( group: 'org.apache.tez', name: 'tez-api', version: tezVersion )
  provided( group: 'org.apache.tez', name: 'tez-dag', version: tezVersion )
  provided( group: 'org.apache.tez', name: 'tez-mapreduce', version: tezVersion )

  provided( group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion )

  testCompile group: 'cascading', name: 'cascading-core', version: cascadingVersion, classifier: 'tests', changing: true
  testCompile group: 'cascading', name: 'cascading-hadoop2-tez', version: cascadingVersion, classifier: 'tests', changing: true
  testCompile group: 'cascading', name: 'cascading-platform', version: cascadingVersion, classifier: 'tests', changing: true

  testCompile group: 'commons-io', name: 'commons-io', version: commonsIoVersion

  testCompile( group: 'org.apache.tez', name: 'tez-tests', version: tezVersion, classifier: 'tests' )
  testCompile( group: 'org.apache.tez', name: 'tez-api', version: tezVersion )
  testCompile( group: 'org.apache.tez', name: 'tez-dag', version: tezVersion )
  testCompile( group: 'org.apache.hadoop', name: 'hadoop-minicluster', version: hadoop2TezVersion )

}

task createProps() {
  ext.jobPropsDir = "${buildDir}/tmp/hadoopManifest/"
  ext.jobProps = "${jobPropsDir}/hadoop.job.properties"

  outputs.file jobProps

  doLast {

    delete jobPropsDir
    mkdir( jobPropsDir )
    file( jobProps ).write( "hadoop.job.jar=true" );
  }
}

task hadoopJar( type: Jar, dependsOn: [jar, createProps] ) {
  description = "Assembles a Hadoop ready jar file"

  classifier = 'hadoop'

  from sourceSets.main.output
  from createProps.jobProps

  doFirst {
    into( 'lib' ) {
      from( configurations.runtime )
    }
  }
}

test {
    setTestClassesDir( file( "${projectDir}/../lingual-platform/src/test/java/" ) )
    sourceSets.test.output.classesDir = file( "${projectDir}/../lingual-platform/build/classes/test" )
}

artifacts {
  archives hadoopJar
  hadoopArtifacts hadoopJar
}

shadowJar.dependsOn( createProps )

shadowJar {
  from createProps.jobProps
}
